#: import uri api.models.uri


<SettingsSection>:
    cols: 2
    row_default_height: 40
    row_force_default: True
    size_hint_y: None
    padding: 30, 0, 0, 10
    height: self.minimum_height


<SettingsScreen>:
    MainWindow:
        TitleLabel:
            text: "Settings page"

        ScrollView:
            do_scroll_y: True
            do_scroll_x: False

            ScrollingGridLayout:

                SubtitleLabel:
                    text: "API"
                SettingsSection:
                    TextLabel:
                        text: "Server"
                    TextInput:
                        id: server
                        text: str(root.config.server)
                        on_text_validate: root.set_property(self.text, "server", uri) 
                        multiline: False

                    TextLabel:
                        text: "Secret:"
                    TextInput:
                        id: secret
                        text: root.config.secret
                        on_text_validate: root.set_property(self.text, "secret", str) 
                        multiline: False


                SubtitleLabel:
                    text: "Date"
                SettingsSection:
                    TextLabel:
                        text: "Year:"
                    IntegerInput:
                        id: year
                        text: str(root.config.year)
                        on_text_validate: root.set_property(self.text, "year", int) 
                        multiline: False

                    TextLabel:
                        text: "Month:"
                    IntegerInput:
                        id: month
                        text: str(root.config.month)
                        on_text_validate: root.set_property(self.text, "year", int) 
                        multiline: False

                    TextLabel:
                        text: "Day:"
                    IntegerInput:
                        id: day
                        text: str(root.config.day)
                        on_text_validate: root.set_property(self.text, "day", int) 
                        multiline: False

                    TextLabel:
                        text: "Hour:"
                    IntegerInput:
                        id: hour
                        text: str(root.config.hour)
                        on_text_validate: root.set_property(self.text, "hour", int) 
                        multiline: False

                    TextLabel:
                        text: "Min:"
                    IntegerInput:
                        text: str(root.config.min)
                        id: min
                        on_text_validate: root.set_property(self.text, "min", int) 
                        multiline: False


                SubtitleLabel:
                    text: "Scalper range backtesting"
                SettingsSection:
                    TextLabel:
                        text: "Target percentage start:"
                    FloatInput:
                        id: target_percentage_start
                        text: str(root.config.target_percentage_start)
                        on_text_validate: root.set_property(self.text, "target_percentage_start", float) 
                        multiline: False

                    TextLabel:
                        text: "Target percentage end:"
                    FloatInput:
                        id: target_percentage_end
                        text: str(root.config.target_percentage_end)
                        on_text_validate: root.set_property(self.text, "target_percentage_end", float) 
                        multiline: False

                    TextLabel:
                        text: "Target percentage step:"
                    FloatInput:
                        id: target_percentage_step
                        text: str(root.config.target_percentage_step)
                        on_text_validate: root.set_property(self.text, "target_percentage_step", float) 
                        multiline: False

                    TextLabel:
                        text: "Stop loss start:"
                    FloatInput:
                        id: stop_loss_start
                        text: str(root.config.stop_loss_start)
                        on_text_validate: root.set_property(self.text, "stop_loss_start", float) 
                        multiline: False

                    TextLabel:
                        text: "Stop loss end:"
                    FloatInput:
                        id: stop_loss_end
                        text: str(root.config.stop_loss_end)
                        on_text_validate: root.set_property(self.text, "stop_loss_end", float) 
                        multiline: False

                    TextLabel:
                        text: "Stop loss step:"
                    FloatInput:
                        id: stop_loss_step
                        text: str(root.config.stop_loss_step)
                        on_text_validate: root.set_property(self.text, "stop_loss_step", float) 
                        multiline: False


                SubtitleLabel:
                    text: "Config backtesting"
                SettingsSection:
                    TextLabel:
                        text: "Top bots count:"
                    TextInput:
                        id: config_backtesting_top_bots_count
                        text: str(root.config.config_backtesting_top_bots_count)
                        on_text_validate: root.set_property(self.text, "config_backtesting_top_bots_count", int) 
                        multiline: False

                    TextLabel:
                        text: "Batch size:"
                    IntegerInput:
                        id: config_backtesting_batch_size
                        text: str(root.config.config_backtesting_batch_size)
                        on_text_validate: root.set_property(self.text, "config_backtesting_batch_size", int) 
                        multiline: False


        BoxLayout:
            size_hint: 1, 0.2
            orientation: "vertical"
            Button:
                text: 'Save settings'
                on_press: root.dispatch("on_save")
            Button:
                text: 'Back to menu'
                on_press: root.manager.current = 'menu'

