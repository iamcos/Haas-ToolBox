# coding: utf-8

"""
    Haasbot LocalAPI

    This is a rest api swagger for the Haasbot.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: support@haasonline.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class HaasscriptapiQuickRunScriptResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'compiler_errors': 'object',
        'execution_token': 'object',
        'main_executor': 'object',
        'execution_stack': 'object',
        'current_executor': 'object',
        'current_debugger': 'object',
        'position_mode': 'int',
        'profit_summary': 'object',
        'profit_reports': 'object',
        'user_data_collection': 'object',
        'requested_orders': 'object',
        'open_orders': 'object',
        'failed_orders': 'object',
        'cancel_orders': 'object',
        'updated_orders_ids': 'object',
        'finished_orders_ids': 'object',
        'finished_position_ids': 'object',
        'managed_long_position': 'object',
        'managed_short_position': 'object',
        'unmanaged_positions': 'object',
        'finished_positions': 'object',
        'split_order_count': 'object',
        'input_fields': 'object',
        'script_memory': 'object',
        'local_memory': 'object',
        'session_memory': 'object',
        'custom_report': 'object',
        'script_type': 'int',
        'current_trade_signal': 'object',
        'user_id': 'str',
        'bot_id': 'str',
        'bot_name': 'str',
        'script_id': 'str',
        'script_name': 'str',
        'is_command_script': 'bool',
        'activated': 'bool',
        'activated_since': 'int',
        'deactivated_since': 'int',
        'account_id': 'str',
        'account_ids': 'object',
        'price_market': 'str',
        'leverage': 'float',
        'bot_market_type': 'object',
        'trade_amount': 'float',
        'order_template': 'object',
        'default_interval': 'int',
        'default_chart_type': 'int',
        'hide_trade_amount_settings': 'bool',
        'hide_order_settings': 'bool',
        'custom_fee': 'object',
        'custom_fees': 'object',
        'order_persistence_enabled': 'bool',
        'order_persistence_limit': 'int',
        'enable_high_speed_updates': 'bool',
        'update_after_completed_order': 'bool',
        'timestamp': 'int',
        'minute_timestamp': 'int',
        'update_timestamp': 'int',
        'update_counter': 'int',
        'is_doing_init': 'bool',
        'is_doing_debug': 'bool',
        'is_doing_backtest': 'bool',
        'is_doing_backtest_finalize': 'bool',
        'is_script_ok': 'bool',
        'trade_amount_error': 'bool',
        'script_trade_amount_error': 'bool',
        'backtest_mode': 'object',
        'pattern_id': 'int',
        'pattern_warm_up': 'int',
        'backtest_start_unix': 'int',
        'backtest_end_unix': 'int',
        'execution_log': 'object',
        'back_log': 'object',
        'debug_log': 'object',
        'data_base_log_count': 'int',
        'is_spot_supported': 'bool',
        'is_margin_supported': 'bool',
        'is_leverage_supported': 'bool',
        'is_managed_trading': 'bool',
        'is_one_direction': 'bool',
        'is_multi_market': 'bool',
        'is_remote_signal_based': 'bool',
        'is_ta_used': 'bool',
        'get_price_market': 'object',
        'get_market_type': 'object',
        'get_base_currency': 'object',
        'get_quote_currency': 'object',
        'get_underlying_asset': 'object',
        'get_used_margin': 'object',
        'get_contract_name': 'object',
        'get_contract_value': 'object',
        'get_amount_label': 'object',
        'get_profit_label': 'object',
        'get_high': 'object',
        'math_get_low': 'object',
        'default_signal_bar': 'object',
        'red': 'object',
        'orange': 'object',
        'green': 'object',
        'gray': 'object',
        'dark_gray': 'object',
        'dark_green': 'object',
        'yellow': 'object',
        'sky_blue': 'object',
        'sma': 'object',
        'ema': 'object',
        'atr': 'object',
        'rsi': 'object',
        'roc': 'object',
        'wma': 'object',
        'udrsi': 'object',
        'array_offset': 'object',
        'price_change': 'object',
        'cancel_order': 'object',
        'is_any_order_open': 'object',
        'trade_amount_command': 'object',
        'is_trade_amount_enough_command': 'object',
        'long_amount_command': 'object',
        'short_amount_command': 'object',
        'do_long_command': 'object',
        'do_short_command': 'object',
        'do_exit_position': 'object',
        'max_long_amount': 'object',
        'max_short_amount': 'object',
        'max_exit_short_amount': 'object',
        'max_exit_long_amount': 'object',
        'get_close_prices': 'object',
        'get_open_prices': 'object',
        'get_high_prices': 'object',
        'get_low_prices': 'object',
        'get_volumes': 'object',
        'fee': 'object',
        'place_exit_position_order': 'object',
        'get_bot_roi_command': 'object',
        'get_position_direction': 'object',
        'input_group_header': 'object',
        'adjust_position': 'object',
        'close_position': 'object'
    }

    attribute_map = {
        'compiler_errors': 'CompilerErrors',
        'execution_token': 'ExecutionToken',
        'main_executor': 'MainExecutor',
        'execution_stack': 'ExecutionStack',
        'current_executor': 'CurrentExecutor',
        'current_debugger': 'CurrentDebugger',
        'position_mode': 'PositionMode',
        'profit_summary': 'ProfitSummary',
        'profit_reports': 'ProfitReports',
        'user_data_collection': 'UserDataCollection',
        'requested_orders': 'RequestedOrders',
        'open_orders': 'OpenOrders',
        'failed_orders': 'FailedOrders',
        'cancel_orders': 'CancelOrders',
        'updated_orders_ids': 'UpdatedOrdersIds',
        'finished_orders_ids': 'FinishedOrdersIds',
        'finished_position_ids': 'FinishedPositionIds',
        'managed_long_position': 'ManagedLongPosition',
        'managed_short_position': 'ManagedShortPosition',
        'unmanaged_positions': 'UnmanagedPositions',
        'finished_positions': 'FinishedPositions',
        'split_order_count': 'SplitOrderCount',
        'input_fields': 'InputFields',
        'script_memory': 'ScriptMemory',
        'local_memory': 'LocalMemory',
        'session_memory': 'SessionMemory',
        'custom_report': 'CustomReport',
        'script_type': 'ScriptType',
        'current_trade_signal': 'CurrentTradeSignal',
        'user_id': 'UserId',
        'bot_id': 'BotId',
        'bot_name': 'BotName',
        'script_id': 'ScriptId',
        'script_name': 'ScriptName',
        'is_command_script': 'IsCommandScript',
        'activated': 'Activated',
        'activated_since': 'ActivatedSince',
        'deactivated_since': 'DeactivatedSince',
        'account_id': 'AccountId',
        'account_ids': 'AccountIds',
        'price_market': 'PriceMarket',
        'leverage': 'Leverage',
        'bot_market_type': 'BotMarketType',
        'trade_amount': 'TradeAmount',
        'order_template': 'OrderTemplate',
        'default_interval': 'DefaultInterval',
        'default_chart_type': 'DefaultChartType',
        'hide_trade_amount_settings': 'HideTradeAmountSettings',
        'hide_order_settings': 'HideOrderSettings',
        'custom_fee': 'CustomFee',
        'custom_fees': 'CustomFees',
        'order_persistence_enabled': 'OrderPersistenceEnabled',
        'order_persistence_limit': 'OrderPersistenceLimit',
        'enable_high_speed_updates': 'EnableHighSpeedUpdates',
        'update_after_completed_order': 'UpdateAfterCompletedOrder',
        'timestamp': 'Timestamp',
        'minute_timestamp': 'MinuteTimestamp',
        'update_timestamp': 'UpdateTimestamp',
        'update_counter': 'UpdateCounter',
        'is_doing_init': 'IsDoingInit',
        'is_doing_debug': 'IsDoingDebug',
        'is_doing_backtest': 'IsDoingBacktest',
        'is_doing_backtest_finalize': 'IsDoingBacktestFinalize',
        'is_script_ok': 'IsScriptOk',
        'trade_amount_error': 'TradeAmountError',
        'script_trade_amount_error': 'ScriptTradeAmountError',
        'backtest_mode': 'BacktestMode',
        'pattern_id': 'PatternId',
        'pattern_warm_up': 'PatternWarmUp',
        'backtest_start_unix': 'BacktestStartUnix',
        'backtest_end_unix': 'BacktestEndUnix',
        'execution_log': 'ExecutionLog',
        'back_log': 'BackLog',
        'debug_log': 'DebugLog',
        'data_base_log_count': 'DataBaseLogCount',
        'is_spot_supported': 'IsSpotSupported',
        'is_margin_supported': 'IsMarginSupported',
        'is_leverage_supported': 'IsLeverageSupported',
        'is_managed_trading': 'IsManagedTrading',
        'is_one_direction': 'IsOneDirection',
        'is_multi_market': 'IsMultiMarket',
        'is_remote_signal_based': 'IsRemoteSignalBased',
        'is_ta_used': 'IsTAUsed',
        'get_price_market': 'GetPriceMarket',
        'get_market_type': 'GetMarketType',
        'get_base_currency': 'GetBaseCurrency',
        'get_quote_currency': 'GetQuoteCurrency',
        'get_underlying_asset': 'GetUnderlyingAsset',
        'get_used_margin': 'GetUsedMargin',
        'get_contract_name': 'GetContractName',
        'get_contract_value': 'GetContractValue',
        'get_amount_label': 'GetAmountLabel',
        'get_profit_label': 'GetProfitLabel',
        'get_high': 'GetHigh',
        'math_get_low': 'MathGetLow',
        'default_signal_bar': 'DefaultSignalBar',
        'red': 'Red',
        'orange': 'Orange',
        'green': 'Green',
        'gray': 'Gray',
        'dark_gray': 'DarkGray',
        'dark_green': 'DarkGreen',
        'yellow': 'Yellow',
        'sky_blue': 'SkyBlue',
        'sma': 'SMA',
        'ema': 'EMA',
        'atr': 'ATR',
        'rsi': 'RSI',
        'roc': 'ROC',
        'wma': 'WMA',
        'udrsi': 'UDRSI',
        'array_offset': 'ArrayOffset',
        'price_change': 'PriceChange',
        'cancel_order': 'CancelOrder',
        'is_any_order_open': 'IsAnyOrderOpen',
        'trade_amount_command': 'TradeAmountCommand',
        'is_trade_amount_enough_command': 'IsTradeAmountEnoughCommand',
        'long_amount_command': 'LongAmountCommand',
        'short_amount_command': 'ShortAmountCommand',
        'do_long_command': 'DoLongCommand',
        'do_short_command': 'DoShortCommand',
        'do_exit_position': 'DoExitPosition',
        'max_long_amount': 'MaxLongAmount',
        'max_short_amount': 'MaxShortAmount',
        'max_exit_short_amount': 'MaxExitShortAmount',
        'max_exit_long_amount': 'MaxExitLongAmount',
        'get_close_prices': 'GetClosePrices',
        'get_open_prices': 'GetOpenPrices',
        'get_high_prices': 'GetHighPrices',
        'get_low_prices': 'GetLowPrices',
        'get_volumes': 'GetVolumes',
        'fee': 'Fee',
        'place_exit_position_order': 'PlaceExitPositionOrder',
        'get_bot_roi_command': 'GetBotRoiCommand',
        'get_position_direction': 'GetPositionDirection',
        'input_group_header': 'InputGroupHeader',
        'adjust_position': 'AdjustPosition',
        'close_position': 'ClosePosition'
    }

    def __init__(self, compiler_errors=None, execution_token=None, main_executor=None, execution_stack=None, current_executor=None, current_debugger=None, position_mode=None, profit_summary=None, profit_reports=None, user_data_collection=None, requested_orders=None, open_orders=None, failed_orders=None, cancel_orders=None, updated_orders_ids=None, finished_orders_ids=None, finished_position_ids=None, managed_long_position=None, managed_short_position=None, unmanaged_positions=None, finished_positions=None, split_order_count=None, input_fields=None, script_memory=None, local_memory=None, session_memory=None, custom_report=None, script_type=None, current_trade_signal=None, user_id=None, bot_id=None, bot_name=None, script_id=None, script_name=None, is_command_script=None, activated=None, activated_since=None, deactivated_since=None, account_id=None, account_ids=None, price_market=None, leverage=None, bot_market_type=None, trade_amount=None, order_template=None, default_interval=None, default_chart_type=None, hide_trade_amount_settings=None, hide_order_settings=None, custom_fee=None, custom_fees=None, order_persistence_enabled=None, order_persistence_limit=None, enable_high_speed_updates=None, update_after_completed_order=None, timestamp=None, minute_timestamp=None, update_timestamp=None, update_counter=None, is_doing_init=None, is_doing_debug=None, is_doing_backtest=None, is_doing_backtest_finalize=None, is_script_ok=None, trade_amount_error=None, script_trade_amount_error=None, backtest_mode=None, pattern_id=None, pattern_warm_up=None, backtest_start_unix=None, backtest_end_unix=None, execution_log=None, back_log=None, debug_log=None, data_base_log_count=None, is_spot_supported=None, is_margin_supported=None, is_leverage_supported=None, is_managed_trading=None, is_one_direction=None, is_multi_market=None, is_remote_signal_based=None, is_ta_used=None, get_price_market=None, get_market_type=None, get_base_currency=None, get_quote_currency=None, get_underlying_asset=None, get_used_margin=None, get_contract_name=None, get_contract_value=None, get_amount_label=None, get_profit_label=None, get_high=None, math_get_low=None, default_signal_bar=None, red=None, orange=None, green=None, gray=None, dark_gray=None, dark_green=None, yellow=None, sky_blue=None, sma=None, ema=None, atr=None, rsi=None, roc=None, wma=None, udrsi=None, array_offset=None, price_change=None, cancel_order=None, is_any_order_open=None, trade_amount_command=None, is_trade_amount_enough_command=None, long_amount_command=None, short_amount_command=None, do_long_command=None, do_short_command=None, do_exit_position=None, max_long_amount=None, max_short_amount=None, max_exit_short_amount=None, max_exit_long_amount=None, get_close_prices=None, get_open_prices=None, get_high_prices=None, get_low_prices=None, get_volumes=None, fee=None, place_exit_position_order=None, get_bot_roi_command=None, get_position_direction=None, input_group_header=None, adjust_position=None, close_position=None):  # noqa: E501
        """HaasscriptapiQuickRunScriptResponse - a model defined in Swagger"""  # noqa: E501
        self._compiler_errors = None
        self._execution_token = None
        self._main_executor = None
        self._execution_stack = None
        self._current_executor = None
        self._current_debugger = None
        self._position_mode = None
        self._profit_summary = None
        self._profit_reports = None
        self._user_data_collection = None
        self._requested_orders = None
        self._open_orders = None
        self._failed_orders = None
        self._cancel_orders = None
        self._updated_orders_ids = None
        self._finished_orders_ids = None
        self._finished_position_ids = None
        self._managed_long_position = None
        self._managed_short_position = None
        self._unmanaged_positions = None
        self._finished_positions = None
        self._split_order_count = None
        self._input_fields = None
        self._script_memory = None
        self._local_memory = None
        self._session_memory = None
        self._custom_report = None
        self._script_type = None
        self._current_trade_signal = None
        self._user_id = None
        self._bot_id = None
        self._bot_name = None
        self._script_id = None
        self._script_name = None
        self._is_command_script = None
        self._activated = None
        self._activated_since = None
        self._deactivated_since = None
        self._account_id = None
        self._account_ids = None
        self._price_market = None
        self._leverage = None
        self._bot_market_type = None
        self._trade_amount = None
        self._order_template = None
        self._default_interval = None
        self._default_chart_type = None
        self._hide_trade_amount_settings = None
        self._hide_order_settings = None
        self._custom_fee = None
        self._custom_fees = None
        self._order_persistence_enabled = None
        self._order_persistence_limit = None
        self._enable_high_speed_updates = None
        self._update_after_completed_order = None
        self._timestamp = None
        self._minute_timestamp = None
        self._update_timestamp = None
        self._update_counter = None
        self._is_doing_init = None
        self._is_doing_debug = None
        self._is_doing_backtest = None
        self._is_doing_backtest_finalize = None
        self._is_script_ok = None
        self._trade_amount_error = None
        self._script_trade_amount_error = None
        self._backtest_mode = None
        self._pattern_id = None
        self._pattern_warm_up = None
        self._backtest_start_unix = None
        self._backtest_end_unix = None
        self._execution_log = None
        self._back_log = None
        self._debug_log = None
        self._data_base_log_count = None
        self._is_spot_supported = None
        self._is_margin_supported = None
        self._is_leverage_supported = None
        self._is_managed_trading = None
        self._is_one_direction = None
        self._is_multi_market = None
        self._is_remote_signal_based = None
        self._is_ta_used = None
        self._get_price_market = None
        self._get_market_type = None
        self._get_base_currency = None
        self._get_quote_currency = None
        self._get_underlying_asset = None
        self._get_used_margin = None
        self._get_contract_name = None
        self._get_contract_value = None
        self._get_amount_label = None
        self._get_profit_label = None
        self._get_high = None
        self._math_get_low = None
        self._default_signal_bar = None
        self._red = None
        self._orange = None
        self._green = None
        self._gray = None
        self._dark_gray = None
        self._dark_green = None
        self._yellow = None
        self._sky_blue = None
        self._sma = None
        self._ema = None
        self._atr = None
        self._rsi = None
        self._roc = None
        self._wma = None
        self._udrsi = None
        self._array_offset = None
        self._price_change = None
        self._cancel_order = None
        self._is_any_order_open = None
        self._trade_amount_command = None
        self._is_trade_amount_enough_command = None
        self._long_amount_command = None
        self._short_amount_command = None
        self._do_long_command = None
        self._do_short_command = None
        self._do_exit_position = None
        self._max_long_amount = None
        self._max_short_amount = None
        self._max_exit_short_amount = None
        self._max_exit_long_amount = None
        self._get_close_prices = None
        self._get_open_prices = None
        self._get_high_prices = None
        self._get_low_prices = None
        self._get_volumes = None
        self._fee = None
        self._place_exit_position_order = None
        self._get_bot_roi_command = None
        self._get_position_direction = None
        self._input_group_header = None
        self._adjust_position = None
        self._close_position = None
        self.discriminator = None
        if compiler_errors is not None:
            self.compiler_errors = compiler_errors
        if execution_token is not None:
            self.execution_token = execution_token
        if main_executor is not None:
            self.main_executor = main_executor
        if execution_stack is not None:
            self.execution_stack = execution_stack
        if current_executor is not None:
            self.current_executor = current_executor
        if current_debugger is not None:
            self.current_debugger = current_debugger
        if position_mode is not None:
            self.position_mode = position_mode
        if profit_summary is not None:
            self.profit_summary = profit_summary
        if profit_reports is not None:
            self.profit_reports = profit_reports
        if user_data_collection is not None:
            self.user_data_collection = user_data_collection
        if requested_orders is not None:
            self.requested_orders = requested_orders
        if open_orders is not None:
            self.open_orders = open_orders
        if failed_orders is not None:
            self.failed_orders = failed_orders
        if cancel_orders is not None:
            self.cancel_orders = cancel_orders
        if updated_orders_ids is not None:
            self.updated_orders_ids = updated_orders_ids
        if finished_orders_ids is not None:
            self.finished_orders_ids = finished_orders_ids
        if finished_position_ids is not None:
            self.finished_position_ids = finished_position_ids
        if managed_long_position is not None:
            self.managed_long_position = managed_long_position
        if managed_short_position is not None:
            self.managed_short_position = managed_short_position
        if unmanaged_positions is not None:
            self.unmanaged_positions = unmanaged_positions
        if finished_positions is not None:
            self.finished_positions = finished_positions
        if split_order_count is not None:
            self.split_order_count = split_order_count
        if input_fields is not None:
            self.input_fields = input_fields
        if script_memory is not None:
            self.script_memory = script_memory
        if local_memory is not None:
            self.local_memory = local_memory
        if session_memory is not None:
            self.session_memory = session_memory
        if custom_report is not None:
            self.custom_report = custom_report
        if script_type is not None:
            self.script_type = script_type
        if current_trade_signal is not None:
            self.current_trade_signal = current_trade_signal
        if user_id is not None:
            self.user_id = user_id
        if bot_id is not None:
            self.bot_id = bot_id
        if bot_name is not None:
            self.bot_name = bot_name
        if script_id is not None:
            self.script_id = script_id
        if script_name is not None:
            self.script_name = script_name
        if is_command_script is not None:
            self.is_command_script = is_command_script
        if activated is not None:
            self.activated = activated
        if activated_since is not None:
            self.activated_since = activated_since
        if deactivated_since is not None:
            self.deactivated_since = deactivated_since
        if account_id is not None:
            self.account_id = account_id
        if account_ids is not None:
            self.account_ids = account_ids
        if price_market is not None:
            self.price_market = price_market
        if leverage is not None:
            self.leverage = leverage
        if bot_market_type is not None:
            self.bot_market_type = bot_market_type
        if trade_amount is not None:
            self.trade_amount = trade_amount
        if order_template is not None:
            self.order_template = order_template
        if default_interval is not None:
            self.default_interval = default_interval
        if default_chart_type is not None:
            self.default_chart_type = default_chart_type
        if hide_trade_amount_settings is not None:
            self.hide_trade_amount_settings = hide_trade_amount_settings
        if hide_order_settings is not None:
            self.hide_order_settings = hide_order_settings
        if custom_fee is not None:
            self.custom_fee = custom_fee
        if custom_fees is not None:
            self.custom_fees = custom_fees
        if order_persistence_enabled is not None:
            self.order_persistence_enabled = order_persistence_enabled
        if order_persistence_limit is not None:
            self.order_persistence_limit = order_persistence_limit
        if enable_high_speed_updates is not None:
            self.enable_high_speed_updates = enable_high_speed_updates
        if update_after_completed_order is not None:
            self.update_after_completed_order = update_after_completed_order
        if timestamp is not None:
            self.timestamp = timestamp
        if minute_timestamp is not None:
            self.minute_timestamp = minute_timestamp
        if update_timestamp is not None:
            self.update_timestamp = update_timestamp
        if update_counter is not None:
            self.update_counter = update_counter
        if is_doing_init is not None:
            self.is_doing_init = is_doing_init
        if is_doing_debug is not None:
            self.is_doing_debug = is_doing_debug
        if is_doing_backtest is not None:
            self.is_doing_backtest = is_doing_backtest
        if is_doing_backtest_finalize is not None:
            self.is_doing_backtest_finalize = is_doing_backtest_finalize
        if is_script_ok is not None:
            self.is_script_ok = is_script_ok
        if trade_amount_error is not None:
            self.trade_amount_error = trade_amount_error
        if script_trade_amount_error is not None:
            self.script_trade_amount_error = script_trade_amount_error
        if backtest_mode is not None:
            self.backtest_mode = backtest_mode
        if pattern_id is not None:
            self.pattern_id = pattern_id
        if pattern_warm_up is not None:
            self.pattern_warm_up = pattern_warm_up
        if backtest_start_unix is not None:
            self.backtest_start_unix = backtest_start_unix
        if backtest_end_unix is not None:
            self.backtest_end_unix = backtest_end_unix
        if execution_log is not None:
            self.execution_log = execution_log
        if back_log is not None:
            self.back_log = back_log
        if debug_log is not None:
            self.debug_log = debug_log
        if data_base_log_count is not None:
            self.data_base_log_count = data_base_log_count
        if is_spot_supported is not None:
            self.is_spot_supported = is_spot_supported
        if is_margin_supported is not None:
            self.is_margin_supported = is_margin_supported
        if is_leverage_supported is not None:
            self.is_leverage_supported = is_leverage_supported
        if is_managed_trading is not None:
            self.is_managed_trading = is_managed_trading
        if is_one_direction is not None:
            self.is_one_direction = is_one_direction
        if is_multi_market is not None:
            self.is_multi_market = is_multi_market
        if is_remote_signal_based is not None:
            self.is_remote_signal_based = is_remote_signal_based
        if is_ta_used is not None:
            self.is_ta_used = is_ta_used
        if get_price_market is not None:
            self.get_price_market = get_price_market
        if get_market_type is not None:
            self.get_market_type = get_market_type
        if get_base_currency is not None:
            self.get_base_currency = get_base_currency
        if get_quote_currency is not None:
            self.get_quote_currency = get_quote_currency
        if get_underlying_asset is not None:
            self.get_underlying_asset = get_underlying_asset
        if get_used_margin is not None:
            self.get_used_margin = get_used_margin
        if get_contract_name is not None:
            self.get_contract_name = get_contract_name
        if get_contract_value is not None:
            self.get_contract_value = get_contract_value
        if get_amount_label is not None:
            self.get_amount_label = get_amount_label
        if get_profit_label is not None:
            self.get_profit_label = get_profit_label
        if get_high is not None:
            self.get_high = get_high
        if math_get_low is not None:
            self.math_get_low = math_get_low
        if default_signal_bar is not None:
            self.default_signal_bar = default_signal_bar
        if red is not None:
            self.red = red
        if orange is not None:
            self.orange = orange
        if green is not None:
            self.green = green
        if gray is not None:
            self.gray = gray
        if dark_gray is not None:
            self.dark_gray = dark_gray
        if dark_green is not None:
            self.dark_green = dark_green
        if yellow is not None:
            self.yellow = yellow
        if sky_blue is not None:
            self.sky_blue = sky_blue
        if sma is not None:
            self.sma = sma
        if ema is not None:
            self.ema = ema
        if atr is not None:
            self.atr = atr
        if rsi is not None:
            self.rsi = rsi
        if roc is not None:
            self.roc = roc
        if wma is not None:
            self.wma = wma
        if udrsi is not None:
            self.udrsi = udrsi
        if array_offset is not None:
            self.array_offset = array_offset
        if price_change is not None:
            self.price_change = price_change
        if cancel_order is not None:
            self.cancel_order = cancel_order
        if is_any_order_open is not None:
            self.is_any_order_open = is_any_order_open
        if trade_amount_command is not None:
            self.trade_amount_command = trade_amount_command
        if is_trade_amount_enough_command is not None:
            self.is_trade_amount_enough_command = is_trade_amount_enough_command
        if long_amount_command is not None:
            self.long_amount_command = long_amount_command
        if short_amount_command is not None:
            self.short_amount_command = short_amount_command
        if do_long_command is not None:
            self.do_long_command = do_long_command
        if do_short_command is not None:
            self.do_short_command = do_short_command
        if do_exit_position is not None:
            self.do_exit_position = do_exit_position
        if max_long_amount is not None:
            self.max_long_amount = max_long_amount
        if max_short_amount is not None:
            self.max_short_amount = max_short_amount
        if max_exit_short_amount is not None:
            self.max_exit_short_amount = max_exit_short_amount
        if max_exit_long_amount is not None:
            self.max_exit_long_amount = max_exit_long_amount
        if get_close_prices is not None:
            self.get_close_prices = get_close_prices
        if get_open_prices is not None:
            self.get_open_prices = get_open_prices
        if get_high_prices is not None:
            self.get_high_prices = get_high_prices
        if get_low_prices is not None:
            self.get_low_prices = get_low_prices
        if get_volumes is not None:
            self.get_volumes = get_volumes
        if fee is not None:
            self.fee = fee
        if place_exit_position_order is not None:
            self.place_exit_position_order = place_exit_position_order
        if get_bot_roi_command is not None:
            self.get_bot_roi_command = get_bot_roi_command
        if get_position_direction is not None:
            self.get_position_direction = get_position_direction
        if input_group_header is not None:
            self.input_group_header = input_group_header
        if adjust_position is not None:
            self.adjust_position = adjust_position
        if close_position is not None:
            self.close_position = close_position

    @property
    def compiler_errors(self):
        """Gets the compiler_errors of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The compiler_errors of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._compiler_errors

    @compiler_errors.setter
    def compiler_errors(self, compiler_errors):
        """Sets the compiler_errors of this HaasscriptapiQuickRunScriptResponse.


        :param compiler_errors: The compiler_errors of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._compiler_errors = compiler_errors

    @property
    def execution_token(self):
        """Gets the execution_token of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The execution_token of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._execution_token

    @execution_token.setter
    def execution_token(self, execution_token):
        """Sets the execution_token of this HaasscriptapiQuickRunScriptResponse.


        :param execution_token: The execution_token of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._execution_token = execution_token

    @property
    def main_executor(self):
        """Gets the main_executor of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The main_executor of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._main_executor

    @main_executor.setter
    def main_executor(self, main_executor):
        """Sets the main_executor of this HaasscriptapiQuickRunScriptResponse.


        :param main_executor: The main_executor of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._main_executor = main_executor

    @property
    def execution_stack(self):
        """Gets the execution_stack of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The execution_stack of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._execution_stack

    @execution_stack.setter
    def execution_stack(self, execution_stack):
        """Sets the execution_stack of this HaasscriptapiQuickRunScriptResponse.


        :param execution_stack: The execution_stack of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._execution_stack = execution_stack

    @property
    def current_executor(self):
        """Gets the current_executor of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The current_executor of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._current_executor

    @current_executor.setter
    def current_executor(self, current_executor):
        """Sets the current_executor of this HaasscriptapiQuickRunScriptResponse.


        :param current_executor: The current_executor of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._current_executor = current_executor

    @property
    def current_debugger(self):
        """Gets the current_debugger of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The current_debugger of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._current_debugger

    @current_debugger.setter
    def current_debugger(self, current_debugger):
        """Sets the current_debugger of this HaasscriptapiQuickRunScriptResponse.


        :param current_debugger: The current_debugger of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._current_debugger = current_debugger

    @property
    def position_mode(self):
        """Gets the position_mode of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The position_mode of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._position_mode

    @position_mode.setter
    def position_mode(self, position_mode):
        """Sets the position_mode of this HaasscriptapiQuickRunScriptResponse.


        :param position_mode: The position_mode of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._position_mode = position_mode

    @property
    def profit_summary(self):
        """Gets the profit_summary of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The profit_summary of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._profit_summary

    @profit_summary.setter
    def profit_summary(self, profit_summary):
        """Sets the profit_summary of this HaasscriptapiQuickRunScriptResponse.


        :param profit_summary: The profit_summary of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._profit_summary = profit_summary

    @property
    def profit_reports(self):
        """Gets the profit_reports of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The profit_reports of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._profit_reports

    @profit_reports.setter
    def profit_reports(self, profit_reports):
        """Sets the profit_reports of this HaasscriptapiQuickRunScriptResponse.


        :param profit_reports: The profit_reports of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._profit_reports = profit_reports

    @property
    def user_data_collection(self):
        """Gets the user_data_collection of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The user_data_collection of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._user_data_collection

    @user_data_collection.setter
    def user_data_collection(self, user_data_collection):
        """Sets the user_data_collection of this HaasscriptapiQuickRunScriptResponse.


        :param user_data_collection: The user_data_collection of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._user_data_collection = user_data_collection

    @property
    def requested_orders(self):
        """Gets the requested_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The requested_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._requested_orders

    @requested_orders.setter
    def requested_orders(self, requested_orders):
        """Sets the requested_orders of this HaasscriptapiQuickRunScriptResponse.


        :param requested_orders: The requested_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._requested_orders = requested_orders

    @property
    def open_orders(self):
        """Gets the open_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The open_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._open_orders

    @open_orders.setter
    def open_orders(self, open_orders):
        """Sets the open_orders of this HaasscriptapiQuickRunScriptResponse.


        :param open_orders: The open_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._open_orders = open_orders

    @property
    def failed_orders(self):
        """Gets the failed_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The failed_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._failed_orders

    @failed_orders.setter
    def failed_orders(self, failed_orders):
        """Sets the failed_orders of this HaasscriptapiQuickRunScriptResponse.


        :param failed_orders: The failed_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._failed_orders = failed_orders

    @property
    def cancel_orders(self):
        """Gets the cancel_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The cancel_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._cancel_orders

    @cancel_orders.setter
    def cancel_orders(self, cancel_orders):
        """Sets the cancel_orders of this HaasscriptapiQuickRunScriptResponse.


        :param cancel_orders: The cancel_orders of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._cancel_orders = cancel_orders

    @property
    def updated_orders_ids(self):
        """Gets the updated_orders_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The updated_orders_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._updated_orders_ids

    @updated_orders_ids.setter
    def updated_orders_ids(self, updated_orders_ids):
        """Sets the updated_orders_ids of this HaasscriptapiQuickRunScriptResponse.


        :param updated_orders_ids: The updated_orders_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._updated_orders_ids = updated_orders_ids

    @property
    def finished_orders_ids(self):
        """Gets the finished_orders_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The finished_orders_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._finished_orders_ids

    @finished_orders_ids.setter
    def finished_orders_ids(self, finished_orders_ids):
        """Sets the finished_orders_ids of this HaasscriptapiQuickRunScriptResponse.


        :param finished_orders_ids: The finished_orders_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._finished_orders_ids = finished_orders_ids

    @property
    def finished_position_ids(self):
        """Gets the finished_position_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The finished_position_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._finished_position_ids

    @finished_position_ids.setter
    def finished_position_ids(self, finished_position_ids):
        """Sets the finished_position_ids of this HaasscriptapiQuickRunScriptResponse.


        :param finished_position_ids: The finished_position_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._finished_position_ids = finished_position_ids

    @property
    def managed_long_position(self):
        """Gets the managed_long_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The managed_long_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._managed_long_position

    @managed_long_position.setter
    def managed_long_position(self, managed_long_position):
        """Sets the managed_long_position of this HaasscriptapiQuickRunScriptResponse.


        :param managed_long_position: The managed_long_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._managed_long_position = managed_long_position

    @property
    def managed_short_position(self):
        """Gets the managed_short_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The managed_short_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._managed_short_position

    @managed_short_position.setter
    def managed_short_position(self, managed_short_position):
        """Sets the managed_short_position of this HaasscriptapiQuickRunScriptResponse.


        :param managed_short_position: The managed_short_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._managed_short_position = managed_short_position

    @property
    def unmanaged_positions(self):
        """Gets the unmanaged_positions of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The unmanaged_positions of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._unmanaged_positions

    @unmanaged_positions.setter
    def unmanaged_positions(self, unmanaged_positions):
        """Sets the unmanaged_positions of this HaasscriptapiQuickRunScriptResponse.


        :param unmanaged_positions: The unmanaged_positions of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._unmanaged_positions = unmanaged_positions

    @property
    def finished_positions(self):
        """Gets the finished_positions of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The finished_positions of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._finished_positions

    @finished_positions.setter
    def finished_positions(self, finished_positions):
        """Sets the finished_positions of this HaasscriptapiQuickRunScriptResponse.


        :param finished_positions: The finished_positions of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._finished_positions = finished_positions

    @property
    def split_order_count(self):
        """Gets the split_order_count of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The split_order_count of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._split_order_count

    @split_order_count.setter
    def split_order_count(self, split_order_count):
        """Sets the split_order_count of this HaasscriptapiQuickRunScriptResponse.


        :param split_order_count: The split_order_count of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._split_order_count = split_order_count

    @property
    def input_fields(self):
        """Gets the input_fields of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The input_fields of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._input_fields

    @input_fields.setter
    def input_fields(self, input_fields):
        """Sets the input_fields of this HaasscriptapiQuickRunScriptResponse.


        :param input_fields: The input_fields of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._input_fields = input_fields

    @property
    def script_memory(self):
        """Gets the script_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The script_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._script_memory

    @script_memory.setter
    def script_memory(self, script_memory):
        """Sets the script_memory of this HaasscriptapiQuickRunScriptResponse.


        :param script_memory: The script_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._script_memory = script_memory

    @property
    def local_memory(self):
        """Gets the local_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The local_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._local_memory

    @local_memory.setter
    def local_memory(self, local_memory):
        """Sets the local_memory of this HaasscriptapiQuickRunScriptResponse.


        :param local_memory: The local_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._local_memory = local_memory

    @property
    def session_memory(self):
        """Gets the session_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The session_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._session_memory

    @session_memory.setter
    def session_memory(self, session_memory):
        """Sets the session_memory of this HaasscriptapiQuickRunScriptResponse.


        :param session_memory: The session_memory of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._session_memory = session_memory

    @property
    def custom_report(self):
        """Gets the custom_report of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The custom_report of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._custom_report

    @custom_report.setter
    def custom_report(self, custom_report):
        """Sets the custom_report of this HaasscriptapiQuickRunScriptResponse.


        :param custom_report: The custom_report of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._custom_report = custom_report

    @property
    def script_type(self):
        """Gets the script_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The script_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._script_type

    @script_type.setter
    def script_type(self, script_type):
        """Sets the script_type of this HaasscriptapiQuickRunScriptResponse.


        :param script_type: The script_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._script_type = script_type

    @property
    def current_trade_signal(self):
        """Gets the current_trade_signal of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The current_trade_signal of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._current_trade_signal

    @current_trade_signal.setter
    def current_trade_signal(self, current_trade_signal):
        """Sets the current_trade_signal of this HaasscriptapiQuickRunScriptResponse.


        :param current_trade_signal: The current_trade_signal of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._current_trade_signal = current_trade_signal

    @property
    def user_id(self):
        """Gets the user_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The user_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this HaasscriptapiQuickRunScriptResponse.


        :param user_id: The user_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    @property
    def bot_id(self):
        """Gets the bot_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The bot_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this HaasscriptapiQuickRunScriptResponse.


        :param bot_id: The bot_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: str
        """

        self._bot_id = bot_id

    @property
    def bot_name(self):
        """Gets the bot_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The bot_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: str
        """
        return self._bot_name

    @bot_name.setter
    def bot_name(self, bot_name):
        """Sets the bot_name of this HaasscriptapiQuickRunScriptResponse.


        :param bot_name: The bot_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: str
        """

        self._bot_name = bot_name

    @property
    def script_id(self):
        """Gets the script_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The script_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: str
        """
        return self._script_id

    @script_id.setter
    def script_id(self, script_id):
        """Sets the script_id of this HaasscriptapiQuickRunScriptResponse.


        :param script_id: The script_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: str
        """

        self._script_id = script_id

    @property
    def script_name(self):
        """Gets the script_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The script_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: str
        """
        return self._script_name

    @script_name.setter
    def script_name(self, script_name):
        """Sets the script_name of this HaasscriptapiQuickRunScriptResponse.


        :param script_name: The script_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: str
        """

        self._script_name = script_name

    @property
    def is_command_script(self):
        """Gets the is_command_script of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_command_script of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_command_script

    @is_command_script.setter
    def is_command_script(self, is_command_script):
        """Sets the is_command_script of this HaasscriptapiQuickRunScriptResponse.


        :param is_command_script: The is_command_script of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_command_script = is_command_script

    @property
    def activated(self):
        """Gets the activated of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The activated of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._activated

    @activated.setter
    def activated(self, activated):
        """Sets the activated of this HaasscriptapiQuickRunScriptResponse.


        :param activated: The activated of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._activated = activated

    @property
    def activated_since(self):
        """Gets the activated_since of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The activated_since of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._activated_since

    @activated_since.setter
    def activated_since(self, activated_since):
        """Sets the activated_since of this HaasscriptapiQuickRunScriptResponse.


        :param activated_since: The activated_since of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._activated_since = activated_since

    @property
    def deactivated_since(self):
        """Gets the deactivated_since of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The deactivated_since of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._deactivated_since

    @deactivated_since.setter
    def deactivated_since(self, deactivated_since):
        """Sets the deactivated_since of this HaasscriptapiQuickRunScriptResponse.


        :param deactivated_since: The deactivated_since of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._deactivated_since = deactivated_since

    @property
    def account_id(self):
        """Gets the account_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The account_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this HaasscriptapiQuickRunScriptResponse.


        :param account_id: The account_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def account_ids(self):
        """Gets the account_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The account_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._account_ids

    @account_ids.setter
    def account_ids(self, account_ids):
        """Sets the account_ids of this HaasscriptapiQuickRunScriptResponse.


        :param account_ids: The account_ids of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._account_ids = account_ids

    @property
    def price_market(self):
        """Gets the price_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The price_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: str
        """
        return self._price_market

    @price_market.setter
    def price_market(self, price_market):
        """Sets the price_market of this HaasscriptapiQuickRunScriptResponse.


        :param price_market: The price_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: str
        """

        self._price_market = price_market

    @property
    def leverage(self):
        """Gets the leverage of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The leverage of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: float
        """
        return self._leverage

    @leverage.setter
    def leverage(self, leverage):
        """Sets the leverage of this HaasscriptapiQuickRunScriptResponse.


        :param leverage: The leverage of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: float
        """

        self._leverage = leverage

    @property
    def bot_market_type(self):
        """Gets the bot_market_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The bot_market_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._bot_market_type

    @bot_market_type.setter
    def bot_market_type(self, bot_market_type):
        """Sets the bot_market_type of this HaasscriptapiQuickRunScriptResponse.


        :param bot_market_type: The bot_market_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._bot_market_type = bot_market_type

    @property
    def trade_amount(self):
        """Gets the trade_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The trade_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: float
        """
        return self._trade_amount

    @trade_amount.setter
    def trade_amount(self, trade_amount):
        """Sets the trade_amount of this HaasscriptapiQuickRunScriptResponse.


        :param trade_amount: The trade_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: float
        """

        self._trade_amount = trade_amount

    @property
    def order_template(self):
        """Gets the order_template of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The order_template of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._order_template

    @order_template.setter
    def order_template(self, order_template):
        """Sets the order_template of this HaasscriptapiQuickRunScriptResponse.


        :param order_template: The order_template of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._order_template = order_template

    @property
    def default_interval(self):
        """Gets the default_interval of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The default_interval of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._default_interval

    @default_interval.setter
    def default_interval(self, default_interval):
        """Sets the default_interval of this HaasscriptapiQuickRunScriptResponse.


        :param default_interval: The default_interval of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._default_interval = default_interval

    @property
    def default_chart_type(self):
        """Gets the default_chart_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The default_chart_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._default_chart_type

    @default_chart_type.setter
    def default_chart_type(self, default_chart_type):
        """Sets the default_chart_type of this HaasscriptapiQuickRunScriptResponse.


        :param default_chart_type: The default_chart_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._default_chart_type = default_chart_type

    @property
    def hide_trade_amount_settings(self):
        """Gets the hide_trade_amount_settings of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The hide_trade_amount_settings of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._hide_trade_amount_settings

    @hide_trade_amount_settings.setter
    def hide_trade_amount_settings(self, hide_trade_amount_settings):
        """Sets the hide_trade_amount_settings of this HaasscriptapiQuickRunScriptResponse.


        :param hide_trade_amount_settings: The hide_trade_amount_settings of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._hide_trade_amount_settings = hide_trade_amount_settings

    @property
    def hide_order_settings(self):
        """Gets the hide_order_settings of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The hide_order_settings of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._hide_order_settings

    @hide_order_settings.setter
    def hide_order_settings(self, hide_order_settings):
        """Sets the hide_order_settings of this HaasscriptapiQuickRunScriptResponse.


        :param hide_order_settings: The hide_order_settings of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._hide_order_settings = hide_order_settings

    @property
    def custom_fee(self):
        """Gets the custom_fee of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The custom_fee of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._custom_fee

    @custom_fee.setter
    def custom_fee(self, custom_fee):
        """Sets the custom_fee of this HaasscriptapiQuickRunScriptResponse.


        :param custom_fee: The custom_fee of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._custom_fee = custom_fee

    @property
    def custom_fees(self):
        """Gets the custom_fees of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The custom_fees of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._custom_fees

    @custom_fees.setter
    def custom_fees(self, custom_fees):
        """Sets the custom_fees of this HaasscriptapiQuickRunScriptResponse.


        :param custom_fees: The custom_fees of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._custom_fees = custom_fees

    @property
    def order_persistence_enabled(self):
        """Gets the order_persistence_enabled of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The order_persistence_enabled of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._order_persistence_enabled

    @order_persistence_enabled.setter
    def order_persistence_enabled(self, order_persistence_enabled):
        """Sets the order_persistence_enabled of this HaasscriptapiQuickRunScriptResponse.


        :param order_persistence_enabled: The order_persistence_enabled of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._order_persistence_enabled = order_persistence_enabled

    @property
    def order_persistence_limit(self):
        """Gets the order_persistence_limit of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The order_persistence_limit of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._order_persistence_limit

    @order_persistence_limit.setter
    def order_persistence_limit(self, order_persistence_limit):
        """Sets the order_persistence_limit of this HaasscriptapiQuickRunScriptResponse.


        :param order_persistence_limit: The order_persistence_limit of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._order_persistence_limit = order_persistence_limit

    @property
    def enable_high_speed_updates(self):
        """Gets the enable_high_speed_updates of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The enable_high_speed_updates of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._enable_high_speed_updates

    @enable_high_speed_updates.setter
    def enable_high_speed_updates(self, enable_high_speed_updates):
        """Sets the enable_high_speed_updates of this HaasscriptapiQuickRunScriptResponse.


        :param enable_high_speed_updates: The enable_high_speed_updates of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._enable_high_speed_updates = enable_high_speed_updates

    @property
    def update_after_completed_order(self):
        """Gets the update_after_completed_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The update_after_completed_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._update_after_completed_order

    @update_after_completed_order.setter
    def update_after_completed_order(self, update_after_completed_order):
        """Sets the update_after_completed_order of this HaasscriptapiQuickRunScriptResponse.


        :param update_after_completed_order: The update_after_completed_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._update_after_completed_order = update_after_completed_order

    @property
    def timestamp(self):
        """Gets the timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this HaasscriptapiQuickRunScriptResponse.


        :param timestamp: The timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._timestamp = timestamp

    @property
    def minute_timestamp(self):
        """Gets the minute_timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The minute_timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._minute_timestamp

    @minute_timestamp.setter
    def minute_timestamp(self, minute_timestamp):
        """Sets the minute_timestamp of this HaasscriptapiQuickRunScriptResponse.


        :param minute_timestamp: The minute_timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._minute_timestamp = minute_timestamp

    @property
    def update_timestamp(self):
        """Gets the update_timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The update_timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._update_timestamp

    @update_timestamp.setter
    def update_timestamp(self, update_timestamp):
        """Sets the update_timestamp of this HaasscriptapiQuickRunScriptResponse.


        :param update_timestamp: The update_timestamp of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._update_timestamp = update_timestamp

    @property
    def update_counter(self):
        """Gets the update_counter of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The update_counter of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._update_counter

    @update_counter.setter
    def update_counter(self, update_counter):
        """Sets the update_counter of this HaasscriptapiQuickRunScriptResponse.


        :param update_counter: The update_counter of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._update_counter = update_counter

    @property
    def is_doing_init(self):
        """Gets the is_doing_init of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_doing_init of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_doing_init

    @is_doing_init.setter
    def is_doing_init(self, is_doing_init):
        """Sets the is_doing_init of this HaasscriptapiQuickRunScriptResponse.


        :param is_doing_init: The is_doing_init of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_doing_init = is_doing_init

    @property
    def is_doing_debug(self):
        """Gets the is_doing_debug of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_doing_debug of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_doing_debug

    @is_doing_debug.setter
    def is_doing_debug(self, is_doing_debug):
        """Sets the is_doing_debug of this HaasscriptapiQuickRunScriptResponse.


        :param is_doing_debug: The is_doing_debug of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_doing_debug = is_doing_debug

    @property
    def is_doing_backtest(self):
        """Gets the is_doing_backtest of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_doing_backtest of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_doing_backtest

    @is_doing_backtest.setter
    def is_doing_backtest(self, is_doing_backtest):
        """Sets the is_doing_backtest of this HaasscriptapiQuickRunScriptResponse.


        :param is_doing_backtest: The is_doing_backtest of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_doing_backtest = is_doing_backtest

    @property
    def is_doing_backtest_finalize(self):
        """Gets the is_doing_backtest_finalize of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_doing_backtest_finalize of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_doing_backtest_finalize

    @is_doing_backtest_finalize.setter
    def is_doing_backtest_finalize(self, is_doing_backtest_finalize):
        """Sets the is_doing_backtest_finalize of this HaasscriptapiQuickRunScriptResponse.


        :param is_doing_backtest_finalize: The is_doing_backtest_finalize of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_doing_backtest_finalize = is_doing_backtest_finalize

    @property
    def is_script_ok(self):
        """Gets the is_script_ok of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_script_ok of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_script_ok

    @is_script_ok.setter
    def is_script_ok(self, is_script_ok):
        """Sets the is_script_ok of this HaasscriptapiQuickRunScriptResponse.


        :param is_script_ok: The is_script_ok of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_script_ok = is_script_ok

    @property
    def trade_amount_error(self):
        """Gets the trade_amount_error of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The trade_amount_error of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._trade_amount_error

    @trade_amount_error.setter
    def trade_amount_error(self, trade_amount_error):
        """Sets the trade_amount_error of this HaasscriptapiQuickRunScriptResponse.


        :param trade_amount_error: The trade_amount_error of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._trade_amount_error = trade_amount_error

    @property
    def script_trade_amount_error(self):
        """Gets the script_trade_amount_error of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The script_trade_amount_error of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._script_trade_amount_error

    @script_trade_amount_error.setter
    def script_trade_amount_error(self, script_trade_amount_error):
        """Sets the script_trade_amount_error of this HaasscriptapiQuickRunScriptResponse.


        :param script_trade_amount_error: The script_trade_amount_error of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._script_trade_amount_error = script_trade_amount_error

    @property
    def backtest_mode(self):
        """Gets the backtest_mode of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The backtest_mode of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._backtest_mode

    @backtest_mode.setter
    def backtest_mode(self, backtest_mode):
        """Sets the backtest_mode of this HaasscriptapiQuickRunScriptResponse.


        :param backtest_mode: The backtest_mode of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._backtest_mode = backtest_mode

    @property
    def pattern_id(self):
        """Gets the pattern_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The pattern_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._pattern_id

    @pattern_id.setter
    def pattern_id(self, pattern_id):
        """Sets the pattern_id of this HaasscriptapiQuickRunScriptResponse.


        :param pattern_id: The pattern_id of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._pattern_id = pattern_id

    @property
    def pattern_warm_up(self):
        """Gets the pattern_warm_up of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The pattern_warm_up of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._pattern_warm_up

    @pattern_warm_up.setter
    def pattern_warm_up(self, pattern_warm_up):
        """Sets the pattern_warm_up of this HaasscriptapiQuickRunScriptResponse.


        :param pattern_warm_up: The pattern_warm_up of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._pattern_warm_up = pattern_warm_up

    @property
    def backtest_start_unix(self):
        """Gets the backtest_start_unix of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The backtest_start_unix of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._backtest_start_unix

    @backtest_start_unix.setter
    def backtest_start_unix(self, backtest_start_unix):
        """Sets the backtest_start_unix of this HaasscriptapiQuickRunScriptResponse.


        :param backtest_start_unix: The backtest_start_unix of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._backtest_start_unix = backtest_start_unix

    @property
    def backtest_end_unix(self):
        """Gets the backtest_end_unix of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The backtest_end_unix of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._backtest_end_unix

    @backtest_end_unix.setter
    def backtest_end_unix(self, backtest_end_unix):
        """Sets the backtest_end_unix of this HaasscriptapiQuickRunScriptResponse.


        :param backtest_end_unix: The backtest_end_unix of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._backtest_end_unix = backtest_end_unix

    @property
    def execution_log(self):
        """Gets the execution_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The execution_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._execution_log

    @execution_log.setter
    def execution_log(self, execution_log):
        """Sets the execution_log of this HaasscriptapiQuickRunScriptResponse.


        :param execution_log: The execution_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._execution_log = execution_log

    @property
    def back_log(self):
        """Gets the back_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The back_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._back_log

    @back_log.setter
    def back_log(self, back_log):
        """Sets the back_log of this HaasscriptapiQuickRunScriptResponse.


        :param back_log: The back_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._back_log = back_log

    @property
    def debug_log(self):
        """Gets the debug_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The debug_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._debug_log

    @debug_log.setter
    def debug_log(self, debug_log):
        """Sets the debug_log of this HaasscriptapiQuickRunScriptResponse.


        :param debug_log: The debug_log of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._debug_log = debug_log

    @property
    def data_base_log_count(self):
        """Gets the data_base_log_count of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The data_base_log_count of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: int
        """
        return self._data_base_log_count

    @data_base_log_count.setter
    def data_base_log_count(self, data_base_log_count):
        """Sets the data_base_log_count of this HaasscriptapiQuickRunScriptResponse.


        :param data_base_log_count: The data_base_log_count of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: int
        """

        self._data_base_log_count = data_base_log_count

    @property
    def is_spot_supported(self):
        """Gets the is_spot_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_spot_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_spot_supported

    @is_spot_supported.setter
    def is_spot_supported(self, is_spot_supported):
        """Sets the is_spot_supported of this HaasscriptapiQuickRunScriptResponse.


        :param is_spot_supported: The is_spot_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_spot_supported = is_spot_supported

    @property
    def is_margin_supported(self):
        """Gets the is_margin_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_margin_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_margin_supported

    @is_margin_supported.setter
    def is_margin_supported(self, is_margin_supported):
        """Sets the is_margin_supported of this HaasscriptapiQuickRunScriptResponse.


        :param is_margin_supported: The is_margin_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_margin_supported = is_margin_supported

    @property
    def is_leverage_supported(self):
        """Gets the is_leverage_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_leverage_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_leverage_supported

    @is_leverage_supported.setter
    def is_leverage_supported(self, is_leverage_supported):
        """Sets the is_leverage_supported of this HaasscriptapiQuickRunScriptResponse.


        :param is_leverage_supported: The is_leverage_supported of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_leverage_supported = is_leverage_supported

    @property
    def is_managed_trading(self):
        """Gets the is_managed_trading of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_managed_trading of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_managed_trading

    @is_managed_trading.setter
    def is_managed_trading(self, is_managed_trading):
        """Sets the is_managed_trading of this HaasscriptapiQuickRunScriptResponse.


        :param is_managed_trading: The is_managed_trading of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_managed_trading = is_managed_trading

    @property
    def is_one_direction(self):
        """Gets the is_one_direction of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_one_direction of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_one_direction

    @is_one_direction.setter
    def is_one_direction(self, is_one_direction):
        """Sets the is_one_direction of this HaasscriptapiQuickRunScriptResponse.


        :param is_one_direction: The is_one_direction of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_one_direction = is_one_direction

    @property
    def is_multi_market(self):
        """Gets the is_multi_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_multi_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_multi_market

    @is_multi_market.setter
    def is_multi_market(self, is_multi_market):
        """Sets the is_multi_market of this HaasscriptapiQuickRunScriptResponse.


        :param is_multi_market: The is_multi_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_multi_market = is_multi_market

    @property
    def is_remote_signal_based(self):
        """Gets the is_remote_signal_based of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_remote_signal_based of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_remote_signal_based

    @is_remote_signal_based.setter
    def is_remote_signal_based(self, is_remote_signal_based):
        """Sets the is_remote_signal_based of this HaasscriptapiQuickRunScriptResponse.


        :param is_remote_signal_based: The is_remote_signal_based of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_remote_signal_based = is_remote_signal_based

    @property
    def is_ta_used(self):
        """Gets the is_ta_used of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_ta_used of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_ta_used

    @is_ta_used.setter
    def is_ta_used(self, is_ta_used):
        """Sets the is_ta_used of this HaasscriptapiQuickRunScriptResponse.


        :param is_ta_used: The is_ta_used of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: bool
        """

        self._is_ta_used = is_ta_used

    @property
    def get_price_market(self):
        """Gets the get_price_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_price_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_price_market

    @get_price_market.setter
    def get_price_market(self, get_price_market):
        """Sets the get_price_market of this HaasscriptapiQuickRunScriptResponse.


        :param get_price_market: The get_price_market of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_price_market = get_price_market

    @property
    def get_market_type(self):
        """Gets the get_market_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_market_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_market_type

    @get_market_type.setter
    def get_market_type(self, get_market_type):
        """Sets the get_market_type of this HaasscriptapiQuickRunScriptResponse.


        :param get_market_type: The get_market_type of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_market_type = get_market_type

    @property
    def get_base_currency(self):
        """Gets the get_base_currency of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_base_currency of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_base_currency

    @get_base_currency.setter
    def get_base_currency(self, get_base_currency):
        """Sets the get_base_currency of this HaasscriptapiQuickRunScriptResponse.


        :param get_base_currency: The get_base_currency of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_base_currency = get_base_currency

    @property
    def get_quote_currency(self):
        """Gets the get_quote_currency of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_quote_currency of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_quote_currency

    @get_quote_currency.setter
    def get_quote_currency(self, get_quote_currency):
        """Sets the get_quote_currency of this HaasscriptapiQuickRunScriptResponse.


        :param get_quote_currency: The get_quote_currency of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_quote_currency = get_quote_currency

    @property
    def get_underlying_asset(self):
        """Gets the get_underlying_asset of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_underlying_asset of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_underlying_asset

    @get_underlying_asset.setter
    def get_underlying_asset(self, get_underlying_asset):
        """Sets the get_underlying_asset of this HaasscriptapiQuickRunScriptResponse.


        :param get_underlying_asset: The get_underlying_asset of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_underlying_asset = get_underlying_asset

    @property
    def get_used_margin(self):
        """Gets the get_used_margin of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_used_margin of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_used_margin

    @get_used_margin.setter
    def get_used_margin(self, get_used_margin):
        """Sets the get_used_margin of this HaasscriptapiQuickRunScriptResponse.


        :param get_used_margin: The get_used_margin of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_used_margin = get_used_margin

    @property
    def get_contract_name(self):
        """Gets the get_contract_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_contract_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_contract_name

    @get_contract_name.setter
    def get_contract_name(self, get_contract_name):
        """Sets the get_contract_name of this HaasscriptapiQuickRunScriptResponse.


        :param get_contract_name: The get_contract_name of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_contract_name = get_contract_name

    @property
    def get_contract_value(self):
        """Gets the get_contract_value of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_contract_value of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_contract_value

    @get_contract_value.setter
    def get_contract_value(self, get_contract_value):
        """Sets the get_contract_value of this HaasscriptapiQuickRunScriptResponse.


        :param get_contract_value: The get_contract_value of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_contract_value = get_contract_value

    @property
    def get_amount_label(self):
        """Gets the get_amount_label of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_amount_label of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_amount_label

    @get_amount_label.setter
    def get_amount_label(self, get_amount_label):
        """Sets the get_amount_label of this HaasscriptapiQuickRunScriptResponse.


        :param get_amount_label: The get_amount_label of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_amount_label = get_amount_label

    @property
    def get_profit_label(self):
        """Gets the get_profit_label of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_profit_label of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_profit_label

    @get_profit_label.setter
    def get_profit_label(self, get_profit_label):
        """Sets the get_profit_label of this HaasscriptapiQuickRunScriptResponse.


        :param get_profit_label: The get_profit_label of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_profit_label = get_profit_label

    @property
    def get_high(self):
        """Gets the get_high of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_high of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_high

    @get_high.setter
    def get_high(self, get_high):
        """Sets the get_high of this HaasscriptapiQuickRunScriptResponse.


        :param get_high: The get_high of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_high = get_high

    @property
    def math_get_low(self):
        """Gets the math_get_low of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The math_get_low of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._math_get_low

    @math_get_low.setter
    def math_get_low(self, math_get_low):
        """Sets the math_get_low of this HaasscriptapiQuickRunScriptResponse.


        :param math_get_low: The math_get_low of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._math_get_low = math_get_low

    @property
    def default_signal_bar(self):
        """Gets the default_signal_bar of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The default_signal_bar of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._default_signal_bar

    @default_signal_bar.setter
    def default_signal_bar(self, default_signal_bar):
        """Sets the default_signal_bar of this HaasscriptapiQuickRunScriptResponse.


        :param default_signal_bar: The default_signal_bar of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._default_signal_bar = default_signal_bar

    @property
    def red(self):
        """Gets the red of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The red of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._red

    @red.setter
    def red(self, red):
        """Sets the red of this HaasscriptapiQuickRunScriptResponse.


        :param red: The red of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._red = red

    @property
    def orange(self):
        """Gets the orange of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The orange of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._orange

    @orange.setter
    def orange(self, orange):
        """Sets the orange of this HaasscriptapiQuickRunScriptResponse.


        :param orange: The orange of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._orange = orange

    @property
    def green(self):
        """Gets the green of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The green of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._green

    @green.setter
    def green(self, green):
        """Sets the green of this HaasscriptapiQuickRunScriptResponse.


        :param green: The green of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._green = green

    @property
    def gray(self):
        """Gets the gray of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The gray of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._gray

    @gray.setter
    def gray(self, gray):
        """Sets the gray of this HaasscriptapiQuickRunScriptResponse.


        :param gray: The gray of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._gray = gray

    @property
    def dark_gray(self):
        """Gets the dark_gray of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The dark_gray of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._dark_gray

    @dark_gray.setter
    def dark_gray(self, dark_gray):
        """Sets the dark_gray of this HaasscriptapiQuickRunScriptResponse.


        :param dark_gray: The dark_gray of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._dark_gray = dark_gray

    @property
    def dark_green(self):
        """Gets the dark_green of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The dark_green of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._dark_green

    @dark_green.setter
    def dark_green(self, dark_green):
        """Sets the dark_green of this HaasscriptapiQuickRunScriptResponse.


        :param dark_green: The dark_green of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._dark_green = dark_green

    @property
    def yellow(self):
        """Gets the yellow of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The yellow of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._yellow

    @yellow.setter
    def yellow(self, yellow):
        """Sets the yellow of this HaasscriptapiQuickRunScriptResponse.


        :param yellow: The yellow of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._yellow = yellow

    @property
    def sky_blue(self):
        """Gets the sky_blue of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The sky_blue of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._sky_blue

    @sky_blue.setter
    def sky_blue(self, sky_blue):
        """Sets the sky_blue of this HaasscriptapiQuickRunScriptResponse.


        :param sky_blue: The sky_blue of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._sky_blue = sky_blue

    @property
    def sma(self):
        """Gets the sma of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The sma of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._sma

    @sma.setter
    def sma(self, sma):
        """Sets the sma of this HaasscriptapiQuickRunScriptResponse.


        :param sma: The sma of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._sma = sma

    @property
    def ema(self):
        """Gets the ema of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The ema of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._ema

    @ema.setter
    def ema(self, ema):
        """Sets the ema of this HaasscriptapiQuickRunScriptResponse.


        :param ema: The ema of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._ema = ema

    @property
    def atr(self):
        """Gets the atr of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The atr of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._atr

    @atr.setter
    def atr(self, atr):
        """Sets the atr of this HaasscriptapiQuickRunScriptResponse.


        :param atr: The atr of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._atr = atr

    @property
    def rsi(self):
        """Gets the rsi of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The rsi of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._rsi

    @rsi.setter
    def rsi(self, rsi):
        """Sets the rsi of this HaasscriptapiQuickRunScriptResponse.


        :param rsi: The rsi of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._rsi = rsi

    @property
    def roc(self):
        """Gets the roc of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The roc of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._roc

    @roc.setter
    def roc(self, roc):
        """Sets the roc of this HaasscriptapiQuickRunScriptResponse.


        :param roc: The roc of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._roc = roc

    @property
    def wma(self):
        """Gets the wma of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The wma of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._wma

    @wma.setter
    def wma(self, wma):
        """Sets the wma of this HaasscriptapiQuickRunScriptResponse.


        :param wma: The wma of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._wma = wma

    @property
    def udrsi(self):
        """Gets the udrsi of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The udrsi of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._udrsi

    @udrsi.setter
    def udrsi(self, udrsi):
        """Sets the udrsi of this HaasscriptapiQuickRunScriptResponse.


        :param udrsi: The udrsi of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._udrsi = udrsi

    @property
    def array_offset(self):
        """Gets the array_offset of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The array_offset of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._array_offset

    @array_offset.setter
    def array_offset(self, array_offset):
        """Sets the array_offset of this HaasscriptapiQuickRunScriptResponse.


        :param array_offset: The array_offset of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._array_offset = array_offset

    @property
    def price_change(self):
        """Gets the price_change of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The price_change of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._price_change

    @price_change.setter
    def price_change(self, price_change):
        """Sets the price_change of this HaasscriptapiQuickRunScriptResponse.


        :param price_change: The price_change of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._price_change = price_change

    @property
    def cancel_order(self):
        """Gets the cancel_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The cancel_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._cancel_order

    @cancel_order.setter
    def cancel_order(self, cancel_order):
        """Sets the cancel_order of this HaasscriptapiQuickRunScriptResponse.


        :param cancel_order: The cancel_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._cancel_order = cancel_order

    @property
    def is_any_order_open(self):
        """Gets the is_any_order_open of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_any_order_open of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._is_any_order_open

    @is_any_order_open.setter
    def is_any_order_open(self, is_any_order_open):
        """Sets the is_any_order_open of this HaasscriptapiQuickRunScriptResponse.


        :param is_any_order_open: The is_any_order_open of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._is_any_order_open = is_any_order_open

    @property
    def trade_amount_command(self):
        """Gets the trade_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The trade_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._trade_amount_command

    @trade_amount_command.setter
    def trade_amount_command(self, trade_amount_command):
        """Sets the trade_amount_command of this HaasscriptapiQuickRunScriptResponse.


        :param trade_amount_command: The trade_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._trade_amount_command = trade_amount_command

    @property
    def is_trade_amount_enough_command(self):
        """Gets the is_trade_amount_enough_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The is_trade_amount_enough_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._is_trade_amount_enough_command

    @is_trade_amount_enough_command.setter
    def is_trade_amount_enough_command(self, is_trade_amount_enough_command):
        """Sets the is_trade_amount_enough_command of this HaasscriptapiQuickRunScriptResponse.


        :param is_trade_amount_enough_command: The is_trade_amount_enough_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._is_trade_amount_enough_command = is_trade_amount_enough_command

    @property
    def long_amount_command(self):
        """Gets the long_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The long_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._long_amount_command

    @long_amount_command.setter
    def long_amount_command(self, long_amount_command):
        """Sets the long_amount_command of this HaasscriptapiQuickRunScriptResponse.


        :param long_amount_command: The long_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._long_amount_command = long_amount_command

    @property
    def short_amount_command(self):
        """Gets the short_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The short_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._short_amount_command

    @short_amount_command.setter
    def short_amount_command(self, short_amount_command):
        """Sets the short_amount_command of this HaasscriptapiQuickRunScriptResponse.


        :param short_amount_command: The short_amount_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._short_amount_command = short_amount_command

    @property
    def do_long_command(self):
        """Gets the do_long_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The do_long_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._do_long_command

    @do_long_command.setter
    def do_long_command(self, do_long_command):
        """Sets the do_long_command of this HaasscriptapiQuickRunScriptResponse.


        :param do_long_command: The do_long_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._do_long_command = do_long_command

    @property
    def do_short_command(self):
        """Gets the do_short_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The do_short_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._do_short_command

    @do_short_command.setter
    def do_short_command(self, do_short_command):
        """Sets the do_short_command of this HaasscriptapiQuickRunScriptResponse.


        :param do_short_command: The do_short_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._do_short_command = do_short_command

    @property
    def do_exit_position(self):
        """Gets the do_exit_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The do_exit_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._do_exit_position

    @do_exit_position.setter
    def do_exit_position(self, do_exit_position):
        """Sets the do_exit_position of this HaasscriptapiQuickRunScriptResponse.


        :param do_exit_position: The do_exit_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._do_exit_position = do_exit_position

    @property
    def max_long_amount(self):
        """Gets the max_long_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The max_long_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._max_long_amount

    @max_long_amount.setter
    def max_long_amount(self, max_long_amount):
        """Sets the max_long_amount of this HaasscriptapiQuickRunScriptResponse.


        :param max_long_amount: The max_long_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._max_long_amount = max_long_amount

    @property
    def max_short_amount(self):
        """Gets the max_short_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The max_short_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._max_short_amount

    @max_short_amount.setter
    def max_short_amount(self, max_short_amount):
        """Sets the max_short_amount of this HaasscriptapiQuickRunScriptResponse.


        :param max_short_amount: The max_short_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._max_short_amount = max_short_amount

    @property
    def max_exit_short_amount(self):
        """Gets the max_exit_short_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The max_exit_short_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._max_exit_short_amount

    @max_exit_short_amount.setter
    def max_exit_short_amount(self, max_exit_short_amount):
        """Sets the max_exit_short_amount of this HaasscriptapiQuickRunScriptResponse.


        :param max_exit_short_amount: The max_exit_short_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._max_exit_short_amount = max_exit_short_amount

    @property
    def max_exit_long_amount(self):
        """Gets the max_exit_long_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The max_exit_long_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._max_exit_long_amount

    @max_exit_long_amount.setter
    def max_exit_long_amount(self, max_exit_long_amount):
        """Sets the max_exit_long_amount of this HaasscriptapiQuickRunScriptResponse.


        :param max_exit_long_amount: The max_exit_long_amount of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._max_exit_long_amount = max_exit_long_amount

    @property
    def get_close_prices(self):
        """Gets the get_close_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_close_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_close_prices

    @get_close_prices.setter
    def get_close_prices(self, get_close_prices):
        """Sets the get_close_prices of this HaasscriptapiQuickRunScriptResponse.


        :param get_close_prices: The get_close_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_close_prices = get_close_prices

    @property
    def get_open_prices(self):
        """Gets the get_open_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_open_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_open_prices

    @get_open_prices.setter
    def get_open_prices(self, get_open_prices):
        """Sets the get_open_prices of this HaasscriptapiQuickRunScriptResponse.


        :param get_open_prices: The get_open_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_open_prices = get_open_prices

    @property
    def get_high_prices(self):
        """Gets the get_high_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_high_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_high_prices

    @get_high_prices.setter
    def get_high_prices(self, get_high_prices):
        """Sets the get_high_prices of this HaasscriptapiQuickRunScriptResponse.


        :param get_high_prices: The get_high_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_high_prices = get_high_prices

    @property
    def get_low_prices(self):
        """Gets the get_low_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_low_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_low_prices

    @get_low_prices.setter
    def get_low_prices(self, get_low_prices):
        """Sets the get_low_prices of this HaasscriptapiQuickRunScriptResponse.


        :param get_low_prices: The get_low_prices of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_low_prices = get_low_prices

    @property
    def get_volumes(self):
        """Gets the get_volumes of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_volumes of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_volumes

    @get_volumes.setter
    def get_volumes(self, get_volumes):
        """Sets the get_volumes of this HaasscriptapiQuickRunScriptResponse.


        :param get_volumes: The get_volumes of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_volumes = get_volumes

    @property
    def fee(self):
        """Gets the fee of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The fee of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._fee

    @fee.setter
    def fee(self, fee):
        """Sets the fee of this HaasscriptapiQuickRunScriptResponse.


        :param fee: The fee of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._fee = fee

    @property
    def place_exit_position_order(self):
        """Gets the place_exit_position_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The place_exit_position_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._place_exit_position_order

    @place_exit_position_order.setter
    def place_exit_position_order(self, place_exit_position_order):
        """Sets the place_exit_position_order of this HaasscriptapiQuickRunScriptResponse.


        :param place_exit_position_order: The place_exit_position_order of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._place_exit_position_order = place_exit_position_order

    @property
    def get_bot_roi_command(self):
        """Gets the get_bot_roi_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_bot_roi_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_bot_roi_command

    @get_bot_roi_command.setter
    def get_bot_roi_command(self, get_bot_roi_command):
        """Sets the get_bot_roi_command of this HaasscriptapiQuickRunScriptResponse.


        :param get_bot_roi_command: The get_bot_roi_command of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_bot_roi_command = get_bot_roi_command

    @property
    def get_position_direction(self):
        """Gets the get_position_direction of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The get_position_direction of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._get_position_direction

    @get_position_direction.setter
    def get_position_direction(self, get_position_direction):
        """Sets the get_position_direction of this HaasscriptapiQuickRunScriptResponse.


        :param get_position_direction: The get_position_direction of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._get_position_direction = get_position_direction

    @property
    def input_group_header(self):
        """Gets the input_group_header of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The input_group_header of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._input_group_header

    @input_group_header.setter
    def input_group_header(self, input_group_header):
        """Sets the input_group_header of this HaasscriptapiQuickRunScriptResponse.


        :param input_group_header: The input_group_header of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._input_group_header = input_group_header

    @property
    def adjust_position(self):
        """Gets the adjust_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The adjust_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._adjust_position

    @adjust_position.setter
    def adjust_position(self, adjust_position):
        """Sets the adjust_position of this HaasscriptapiQuickRunScriptResponse.


        :param adjust_position: The adjust_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._adjust_position = adjust_position

    @property
    def close_position(self):
        """Gets the close_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501


        :return: The close_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :rtype: object
        """
        return self._close_position

    @close_position.setter
    def close_position(self, close_position):
        """Sets the close_position of this HaasscriptapiQuickRunScriptResponse.


        :param close_position: The close_position of this HaasscriptapiQuickRunScriptResponse.  # noqa: E501
        :type: object
        """

        self._close_position = close_position

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HaasscriptapiQuickRunScriptResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HaasscriptapiQuickRunScriptResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
