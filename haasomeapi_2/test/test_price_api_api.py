# coding: utf-8

"""
    Haasbot LocalAPI

    This is a rest api swagger for the Haasbot.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: support@haasonline.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.price_api_api import PriceAPIApi  # noqa: E501
from swagger_client.rest import ApiException


class TestPriceAPIApi(unittest.TestCase):
    """PriceAPIApi unit test stubs"""

    def setUp(self):
        self.api = PriceAPIApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_all_markets(self):
        """Test case for all_markets

        Returns a dictionary of the supported price sources and the markets they support  # noqa: E501
        """
        pass

    def test_all_pricesources(self):
        """Test case for all_pricesources

        Returns a simple list of all the supported pricesources  # noqa: E501
        """
        pass

    def test_coinlist(self):
        """Test case for coinlist

        Returns a list of all the coins which are supported  # noqa: E501
        """
        pass

    def test_deepticks(self):
        """Test case for deepticks

        Returns about 40,000 ticks of the last minutes  # noqa: E501
        """
        pass

    def test_fiat_conversions(self):
        """Test case for fiat_conversions

        Returns average a fiat conversion rates  # noqa: E501
        """
        pass

    def test_get_chart(self):
        """Test case for get_chart

        Returns a basic chart with prices  # noqa: E501
        """
        pass

    def test_get_exchange_price_change(self):
        """Test case for get_exchange_price_change

        Returns list of price changes  # noqa: E501
        """
        pass

    def test_get_history_compare_chart(self):
        """Test case for get_history_compare_chart

        Returns a price compare chart  # noqa: E501
        """
        pass

    def test_get_spread_compare_chart(self):
        """Test case for get_spread_compare_chart

        Returns a price spread chart  # noqa: E501
        """
        pass

    def test_get_volume_compare_chart(self):
        """Test case for get_volume_compare_chart

        Returns a volume compare chart  # noqa: E501
        """
        pass

    def test_lastticks(self):
        """Test case for lastticks

        Returns between 500 and 1440 ticks  # noqa: E501
        """
        pass

    def test_lasttrades(self):
        """Test case for lasttrades

        Returns the last trades  # noqa: E501
        """
        pass

    def test_market_snapshot(self):
        """Test case for market_snapshot

        Returns a snapshot of the very last prices (DO NOT USE!)  # noqa: E501
        """
        pass

    def test_marketlist(self):
        """Test case for marketlist

        Returns a list of all the markets which are supported  # noqa: E501
        """
        pass

    def test_markets(self):
        """Test case for markets

        Returns a list of the supported markets  # noqa: E501
        """
        pass

    def test_new_coins(self):
        """Test case for new_coins

        Returns a list of all the new coins which are supported  # noqa: E501
        """
        pass

    def test_new_markets(self):
        """Test case for new_markets

        Returns a list of all the new markets which are supported  # noqa: E501
        """
        pass

    def test_orderbook(self):
        """Test case for orderbook

        Returns the orderbook  # noqa: E501
        """
        pass

    def test_price(self):
        """Test case for price

        Returns the last price  # noqa: E501
        """
        pass

    def test_pricepackage(self):
        """Test case for pricepackage

        Returns a full month of price ticks (per minute)  # noqa: E501
        """
        pass

    def test_pricesources(self):
        """Test case for pricesources

        Returns a detailed list of all the supported pricesources  # noqa: E501
        """
        pass

    def test_related_markets(self):
        """Test case for related_markets

        Returns a list of all related markets  # noqa: E501
        """
        pass

    def test_related_prices(self):
        """Test case for related_prices

        Returns a list of all related market prices  # noqa: E501
        """
        pass

    def test_snapshot(self):
        """Test case for snapshot

        Returns a snapshot of the very last prices  # noqa: E501
        """
        pass

    def test_syncticks(self):
        """Test case for syncticks

        Returns the 10 very last minutes  # noqa: E501
        """
        pass

    def test_time(self):
        """Test case for time

        Returns the servertime (UNIX-UTC)  # noqa: E501
        """
        pass

    def test_unique_marketlist(self):
        """Test case for unique_marketlist

        Returns a list of all unique markets which are supported  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
