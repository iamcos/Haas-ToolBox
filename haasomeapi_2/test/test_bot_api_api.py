# coding: utf-8

"""
    Haasbot LocalAPI

    This is a rest api swagger for the Haasbot.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: support@haasonline.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.bot_api_api import BotAPIApi  # noqa: E501
from swagger_client.rest import ApiException


class TestBotAPIApi(unittest.TestCase):
    """BotAPIApi unit test stubs"""

    def setUp(self):
        self.api = BotAPIApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_activate_bot(self):
        """Test case for activate_bot

        Activates the given bot  # noqa: E501
        """
        pass

    def test_add_bot(self):
        """Test case for add_bot

        Add a new bot  # noqa: E501
        """
        pass

    def test_add_bot_from_backtest(self):
        """Test case for add_bot_from_backtest

        Add a new bot from a backtest result  # noqa: E501
        """
        pass

    def test_adjust_position(self):
        """Test case for adjust_position

        Changes a bot its open position details  # noqa: E501
        """
        pass

    def test_cancel_all_orders(self):
        """Test case for cancel_all_orders

        Cancels all bot orders (manually)  # noqa: E501
        """
        pass

    def test_cancel_order(self):
        """Test case for cancel_order

        Cancels a bot order (manually)  # noqa: E501
        """
        pass

    def test_clean_bot(self):
        """Test case for clean_bot

        Cleans the bot its logbook and trades  # noqa: E501
        """
        pass

    def test_clone_bot(self):
        """Test case for clone_bot

        Clones a excisting bot  # noqa: E501
        """
        pass

    def test_close_position(self):
        """Test case for close_position

        Closes a bot position (manually)  # noqa: E501
        """
        pass

    def test_deactivate_bot(self):
        """Test case for deactivate_bot

        Deactivates the given bot  # noqa: E501
        """
        pass

    def test_delete_bot(self):
        """Test case for delete_bot

        Deletes/removes the given bot  # noqa: E501
        """
        pass

    def test_edit_script(self):
        """Test case for edit_script

        Edits the bots its script  # noqa: E501
        """
        pass

    def test_edit_settings(self):
        """Test case for edit_settings

        Edits the bots its settings  # noqa: E501
        """
        pass

    def test_favorite_bot(self):
        """Test case for favorite_bot

        Makes a bot a favorite bot  # noqa: E501
        """
        pass

    def test_get_bot(self):
        """Test case for get_bot

        Returns the requested bot  # noqa: E501
        """
        pass

    def test_get_bots(self):
        """Test case for get_bots

        Returns all the user its bots  # noqa: E501
        """
        pass

    def test_get_chart(self):
        """Test case for get_chart

        Returns the bots its rendered runtime chart  # noqa: E501
        """
        pass

    def test_get_full_logbook(self):
        """Test case for get_full_logbook

        Returns the bots its full logbook  # noqa: E501
        """
        pass

    def test_get_logbook(self):
        """Test case for get_logbook

        Returns the bots its message logbook  # noqa: E501
        """
        pass

    def test_get_open_orders(self):
        """Test case for get_open_orders

        Returns all the open bot orders  # noqa: E501
        """
        pass

    def test_get_open_positions(self):
        """Test case for get_open_positions

        Returns all the open bot positions  # noqa: E501
        """
        pass

    def test_get_runtime(self):
        """Test case for get_runtime

        Returns the bots its runtime  # noqa: E501
        """
        pass

    def test_get_runtime_logbook(self):
        """Test case for get_runtime_logbook

        Returns the bots its recent logbook  # noqa: E501
        """
        pass

    def test_rename_bot(self):
        """Test case for rename_bot

        Renames the bot  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
